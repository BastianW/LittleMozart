package de.blueskymaniacs.musicaltheory.notesystem;
import static de.blueskymaniacs.musicaltheory.notesystem.C.*;
import static de.blueskymaniacs.musicaltheory.notesystem.NoteInterval.*;

public enum TonalSystemType {
	IONIAN( IONIAN_MODE ,new NoteInterval[]{PRIME_PERFECT,SECOND_MAJOR,THIRD_MAJOR,FOURTH_PERFECT,FIFTH_PERFECT,SIXTH_MAJOR,SEVENTH_MAJOR},0),  		//I
	MAJOR( MAJOR_MODE ,IONIAN.getScale(),0),
	DORIAN( DORIAN_MODE, new NoteInterval[]{PRIME_PERFECT,SECOND_MAJOR,THIRD_MINOR,FOURTH_PERFECT,FIFTH_PERFECT,SIXTH_MAJOR,SEVENTH_MINOR},1),		//II
	
	PHRYGIAN( PHRYGIAN_MODE, new NoteInterval[]{PRIME_PERFECT,SECOND_MINOR,THIRD_MINOR,FOURTH_PERFECT,FIFTH_PERFECT,SIXTH_MINOR,SEVENTH_MINOR},2),	//III
	
	LYDIAN( LYDIAN_MODE ,new NoteInterval[]{PRIME_PERFECT,SECOND_MAJOR,THIRD_MAJOR,FOURTH_AUGMENTED,FIFTH_PERFECT,SIXTH_MAJOR,SEVENTH_MAJOR},3),		//IV
	
	MIXOLYDIAN( MIXOLYDIAN_MODE, new NoteInterval[]{PRIME_PERFECT,SECOND_MAJOR,THIRD_MAJOR,FOURTH_PERFECT,FIFTH_PERFECT,SIXTH_MAJOR,SEVENTH_MINOR},4),//V
	
	AEOLIAN( AEOLIAN_MODE, new NoteInterval[]{PRIME_PERFECT,SECOND_MAJOR,THIRD_MINOR,FOURTH_PERFECT,FIFTH_PERFECT,SIXTH_MINOR,SEVENTH_MINOR},5),//VI
	MINOR( MINOR_MODE , AEOLIAN.getScale(),5),
	
	LOCRIAN( LOCRIAN_MODE, new NoteInterval[]{PRIME_PERFECT,SECOND_MINOR,THIRD_MINOR,FOURTH_PERFECT,FIFTH_DIMINISHED,SIXTH_MINOR,SEVENTH_MINOR},6),//VII
	
	
	PENTATONIC_MAYOR( PENTATONIC_MAJOR_MODE, new NoteInterval[]{PRIME_PERFECT,SECOND_MAJOR,THIRD_MAJOR,FIFTH_PERFECT,SIXTH_MAJOR},-1),
	PENTATONIC_MINOR( PENTATONIC_MINOR_MODE, new NoteInterval[]{PRIME_PERFECT,THIRD_MINOR,FOURTH_PERFECT,FIFTH_PERFECT,SEVENTH_MINOR},-1),
	BLUES(BLUES_MODE, new NoteInterval[]{PRIME_PERFECT,SECOND_AUGMENTED,THIRD_AUGMENTED,FOURTH_AUGMENTED,FIFTH_PERFECT,SIXTH_AUGMENTED},-1)
	;

	private NoteInterval[] mScale;
	private String mName;
	private int mOffset;
	
	private TonalSystemType(String name, NoteInterval[] scale, int offset) {
		this.mScale = scale;
		mName=name;
		mOffset=offset;
	}

	public NoteInterval[] getScale() {
		return mScale;
	}

	int getOffset() {
		return mOffset;
	}

}
